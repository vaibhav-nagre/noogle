"use strict";exports.id=645,exports.ids=[645],exports.modules={6645:(e,t,n)=>{n.d(t,{getDefaultRoleAssumer:()=>t3,getDefaultRoleAssumerWithWebIdentity:()=>t7});var s=n(531),r=n(5275),o=n(7033),i=n(105),a=n(6288),l=n(1614),d=n(89),c=n(2898),u=n(2618),p=n(8810),h=n(9336),m=n(6771);let f=async(e,t,n)=>({operation:(0,m.u)(t).operation,region:await (0,m.t)(e.region)()||(()=>{throw Error("expected `region` to be configured for `aws.auth#sigv4`")})()}),g=e=>{let t=[];return"AssumeRoleWithWebIdentity"===e.operation?t.push({schemeId:"smithy.api#noAuth"}):t.push({schemeId:"aws.auth#sigv4",signingProperties:{name:"sts",region:e.region},propertiesExtractor:(e,t)=>({signingProperties:{config:e,context:t}})}),t},y=e=>({...e,stsClientCtor:eA}),S=e=>{let t=y(e);return{...(0,h.h)(t)}},E=e=>({...e,useDualstackEndpoint:e.useDualstackEndpoint??!1,useFipsEndpoint:e.useFipsEndpoint??!1,useGlobalEndpoint:e.useGlobalEndpoint??!1,defaultSigningName:"sts"}),P={UseGlobalEndpoint:{type:"builtInParams",name:"useGlobalEndpoint"},UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}};var w=n(3279),I=n(8398),b=n(241),A=n(7747),v=n(1101),x=n(7159),C=n(6225),R=n(6316),k=n(7426),T=n(2629),D=n(1357),$=n(4216),K=n(4046),O=n(2518);let W="required",j="type",z="argv",M="booleanEquals",U="stringEquals",F="sigv4",q="us-east-1",_="endpoint",H="https://sts.{Region}.{PartitionResult#dnsSuffix}",L="tree",N="error",V="getAttr",G={[W]:!1,[j]:"String"},B={[W]:!0,default:!1,[j]:"Boolean"},Z={ref:"Endpoint"},J={fn:"isSet",[z]:[{ref:"Region"}]},Y={ref:"Region"},Q={fn:"aws.partition",[z]:[Y],assign:"PartitionResult"},X={ref:"UseFIPS"},ee={ref:"UseDualStack"},et={url:"https://sts.amazonaws.com",properties:{authSchemes:[{name:F,signingName:"sts",signingRegion:q}]},headers:{}},en={},es={conditions:[{fn:U,[z]:[Y,"aws-global"]}],[_]:et,[j]:_},er={fn:M,[z]:[X,!0]},eo={fn:M,[z]:[ee,!0]},ei={fn:V,[z]:[{ref:"PartitionResult"},"supportsFIPS"]},ea={ref:"PartitionResult"},el={fn:M,[z]:[!0,{fn:V,[z]:[ea,"supportsDualStack"]}]},ed=[{fn:"isSet",[z]:[Z]}],ec=[er],eu=[eo],ep={version:"1.0",parameters:{Region:G,UseDualStack:B,UseFIPS:B,Endpoint:G,UseGlobalEndpoint:B},rules:[{conditions:[{fn:M,[z]:[{ref:"UseGlobalEndpoint"},!0]},{fn:"not",[z]:ed},J,Q,{fn:M,[z]:[X,!1]},{fn:M,[z]:[ee,!1]}],rules:[{conditions:[{fn:U,[z]:[Y,"ap-northeast-1"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"ap-south-1"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"ap-southeast-1"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"ap-southeast-2"]}],endpoint:et,[j]:_},es,{conditions:[{fn:U,[z]:[Y,"ca-central-1"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"eu-central-1"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"eu-north-1"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"eu-west-1"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"eu-west-2"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"eu-west-3"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"sa-east-1"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,q]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"us-east-2"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"us-west-1"]}],endpoint:et,[j]:_},{conditions:[{fn:U,[z]:[Y,"us-west-2"]}],endpoint:et,[j]:_},{endpoint:{url:H,properties:{authSchemes:[{name:F,signingName:"sts",signingRegion:"{Region}"}]},headers:en},[j]:_}],[j]:L},{conditions:ed,rules:[{conditions:ec,error:"Invalid Configuration: FIPS and custom endpoint are not supported",[j]:N},{conditions:eu,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",[j]:N},{endpoint:{url:Z,properties:en,headers:en},[j]:_}],[j]:L},{conditions:[J],rules:[{conditions:[Q],rules:[{conditions:[er,eo],rules:[{conditions:[{fn:M,[z]:[!0,ei]},el],rules:[{endpoint:{url:"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:en,headers:en},[j]:_}],[j]:L},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",[j]:N}],[j]:L},{conditions:ec,rules:[{conditions:[{fn:M,[z]:[ei,!0]}],rules:[{conditions:[{fn:U,[z]:[{fn:V,[z]:[ea,"name"]},"aws-us-gov"]}],endpoint:{url:"https://sts.{Region}.amazonaws.com",properties:en,headers:en},[j]:_},{endpoint:{url:"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}",properties:en,headers:en},[j]:_}],[j]:L},{error:"FIPS is enabled but this partition does not support FIPS",[j]:N}],[j]:L},{conditions:eu,rules:[{conditions:[el],rules:[{endpoint:{url:"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:en,headers:en},[j]:_}],[j]:L},{error:"DualStack is enabled but this partition does not support DualStack",[j]:N}],[j]:L},es,{endpoint:{url:H,properties:en,headers:en},[j]:_}],[j]:L}],[j]:L},{error:"Invalid Configuration: Missing Region",[j]:N}]},eh=new O.kS({size:50,params:["Endpoint","Region","UseDualStack","UseFIPS","UseGlobalEndpoint"]}),em=(e,t={})=>eh.get(e,()=>(0,O.sO)(ep,{endpointParams:e,logger:t.logger}));O.mw.aws=K.UF;let ef=e=>({apiVersion:"2011-06-15",base64Decoder:e?.base64Decoder??D.E,base64Encoder:e?.base64Encoder??D.n,disableHostPrefix:e?.disableHostPrefix??!1,endpointProvider:e?.endpointProvider??em,extensions:e?.extensions??[],httpAuthSchemeProvider:e?.httpAuthSchemeProvider??g,httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:e=>e.getIdentityProvider("aws.auth#sigv4"),signer:new b.f2},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new l.mR}],logger:e?.logger??new p.N4,serviceId:e?.serviceId??"STS",urlParser:e?.urlParser??T.D,utf8Decoder:e?.utf8Decoder??$.ar,utf8Encoder:e?.utf8Encoder??$.Pq});var eg=n(8746);let ey=e=>{(0,p.I9)(process.version);let t=(0,eg.I)(e),n=()=>t().then(p.lT),s=ef(e);(0,I.I)(process.version);let r={profile:e?.profile};return{...s,...e,runtime:"node",defaultsMode:t,bodyLengthChecker:e?.bodyLengthChecker??R.n,defaultUserAgentProvider:e?.defaultUserAgentProvider??(0,A.pf)({serviceId:s.serviceId,clientVersion:w.rE}),httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:t=>t.getIdentityProvider("aws.auth#sigv4")||(async t=>await e.credentialDefaultProvider(t?.__config||{})()),signer:new b.f2},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new l.mR}],maxAttempts:e?.maxAttempts??(0,x.Z)(u.qs,e),region:e?.region??(0,x.Z)(a.GG,{...a.zH,...r}),requestHandler:C.$c.create(e?.requestHandler??n),retryMode:e?.retryMode??(0,x.Z)({...u.kN,default:async()=>(await n()).retryMode||k.L0},e),sha256:e?.sha256??v.V.bind(null,"sha256"),streamCollector:e?.streamCollector??C.kv,useDualstackEndpoint:e?.useDualstackEndpoint??(0,x.Z)(a.e$,r),useFipsEndpoint:e?.useFipsEndpoint??(0,x.Z)(a.Ko,r),userAgentAppId:e?.userAgentAppId??(0,x.Z)(A.hV,r)}};var eS=n(1168),eE=n(7250);let eP=e=>{let t=e.httpAuthSchemes,n=e.httpAuthSchemeProvider,s=e.credentials;return{setHttpAuthScheme(e){let n=t.findIndex(t=>t.schemeId===e.schemeId);-1===n?t.push(e):t.splice(n,1,e)},httpAuthSchemes:()=>t,setHttpAuthSchemeProvider(e){n=e},httpAuthSchemeProvider:()=>n,setCredentials(e){s=e},credentials:()=>s}},ew=e=>({httpAuthSchemes:e.httpAuthSchemes(),httpAuthSchemeProvider:e.httpAuthSchemeProvider(),credentials:e.credentials()}),eI=e=>e,eb=(e,t)=>{let n={...eI((0,eS.Rq)(e)),...eI((0,p.xA)(e)),...eI((0,eE.eS)(e)),...eI(eP(e))};return t.forEach(e=>e.configure(n)),{...e,...(0,eS.$3)(n),...(0,p.uv)(n),...(0,eE.jt)(n),...ew(n)}};class eA extends p.Kj{config;constructor(...[e]){let t=E(ey(e||{})),n=(0,i.Dc)(t),p=(0,u.$z)(n),h=(0,a.TD)(p),m=(0,s.OV)(h),g=eb(S((0,c.Co)(m)),e?.extensions||[]);super(g),this.config=g,this.middlewareStack.use((0,i.sM)(this.config)),this.middlewareStack.use((0,u.ey)(this.config)),this.middlewareStack.use((0,d.vK)(this.config)),this.middlewareStack.use((0,s.TC)(this.config)),this.middlewareStack.use((0,r.Y7)(this.config)),this.middlewareStack.use((0,o.n4)(this.config)),this.middlewareStack.use((0,l.wB)(this.config,{httpAuthSchemeParametersProvider:f,identityProviderConfigProvider:async e=>new l.h$({"aws.auth#sigv4":e.credentials})})),this.middlewareStack.use((0,l.lW)(this.config))}destroy(){super.destroy()}}var ev=n(318);class ex extends p.TJ{constructor(e){super(e),Object.setPrototypeOf(this,ex.prototype)}}let eC=e=>({...e,...e.SecretAccessKey&&{SecretAccessKey:p.$H}}),eR=e=>({...e,...e.Credentials&&{Credentials:eC(e.Credentials)}});class ek extends ex{name="ExpiredTokenException";$fault="client";constructor(e){super({name:"ExpiredTokenException",$fault:"client",...e}),Object.setPrototypeOf(this,ek.prototype)}}class eT extends ex{name="MalformedPolicyDocumentException";$fault="client";constructor(e){super({name:"MalformedPolicyDocumentException",$fault:"client",...e}),Object.setPrototypeOf(this,eT.prototype)}}class eD extends ex{name="PackedPolicyTooLargeException";$fault="client";constructor(e){super({name:"PackedPolicyTooLargeException",$fault:"client",...e}),Object.setPrototypeOf(this,eD.prototype)}}class e$ extends ex{name="RegionDisabledException";$fault="client";constructor(e){super({name:"RegionDisabledException",$fault:"client",...e}),Object.setPrototypeOf(this,e$.prototype)}}class eK extends ex{name="IDPRejectedClaimException";$fault="client";constructor(e){super({name:"IDPRejectedClaimException",$fault:"client",...e}),Object.setPrototypeOf(this,eK.prototype)}}class eO extends ex{name="InvalidIdentityTokenException";$fault="client";constructor(e){super({name:"InvalidIdentityTokenException",$fault:"client",...e}),Object.setPrototypeOf(this,eO.prototype)}}let eW=e=>({...e,...e.WebIdentityToken&&{WebIdentityToken:p.$H}}),ej=e=>({...e,...e.Credentials&&{Credentials:eC(e.Credentials)}});class ez extends ex{name="IDPCommunicationErrorException";$fault="client";constructor(e){super({name:"IDPCommunicationErrorException",$fault:"client",...e}),Object.setPrototypeOf(this,ez.prototype)}}var eM=n(9125);let eU=async(e,t)=>{let n;return n=tB({...eY(e,t),[tp]:tm,[tH]:tu}),td(t,tc,"/",void 0,n)},eF=async(e,t)=>{let n;return n=tB({...eQ(e,t),[tp]:ty,[tH]:tu}),td(t,tc,"/",void 0,n)},eq=async(e,t)=>{if(e.statusCode>=300)return eH(e,t);let n=await (0,eM.t_)(e.body,t),s={};return s=e3(n.AssumeRoleResult,t),{$metadata:ta(e),...s}},e_=async(e,t)=>{if(e.statusCode>=300)return eH(e,t);let n=await (0,eM.t_)(e.body,t),s={};return s=e7(n.AssumeRoleWithWebIdentityResult,t),{$metadata:ta(e),...s}},eH=async(e,t)=>{let n={...e,body:await (0,eM.FI)(e.body,t)},s=tZ(e,n.body);switch(s){case"ExpiredTokenException":case"com.amazonaws.sts#ExpiredTokenException":throw await eL(n,t);case"MalformedPolicyDocument":case"com.amazonaws.sts#MalformedPolicyDocumentException":throw await eB(n,t);case"PackedPolicyTooLarge":case"com.amazonaws.sts#PackedPolicyTooLargeException":throw await eZ(n,t);case"RegionDisabledException":case"com.amazonaws.sts#RegionDisabledException":throw await eJ(n,t);case"IDPCommunicationError":case"com.amazonaws.sts#IDPCommunicationErrorException":throw await eN(n,t);case"IDPRejectedClaim":case"com.amazonaws.sts#IDPRejectedClaimException":throw await eV(n,t);case"InvalidIdentityToken":case"com.amazonaws.sts#InvalidIdentityTokenException":throw await eG(n,t);default:return tl({output:e,parsedBody:n.body.Error,errorCode:s})}},eL=async(e,t)=>{let n=e.body,s=te(n.Error,t),r=new ek({$metadata:ta(e),...s});return(0,p.Mw)(r,n)},eN=async(e,t)=>{let n=e.body,s=tt(n.Error,t),r=new ez({$metadata:ta(e),...s});return(0,p.Mw)(r,n)},eV=async(e,t)=>{let n=e.body,s=tn(n.Error,t),r=new eK({$metadata:ta(e),...s});return(0,p.Mw)(r,n)},eG=async(e,t)=>{let n=e.body,s=ts(n.Error,t),r=new eO({$metadata:ta(e),...s});return(0,p.Mw)(r,n)},eB=async(e,t)=>{let n=e.body,s=tr(n.Error,t),r=new eT({$metadata:ta(e),...s});return(0,p.Mw)(r,n)},eZ=async(e,t)=>{let n=e.body,s=to(n.Error,t),r=new eD({$metadata:ta(e),...s});return(0,p.Mw)(r,n)},eJ=async(e,t)=>{let n=e.body,s=ti(n.Error,t),r=new e$({$metadata:ta(e),...s});return(0,p.Mw)(r,n)},eY=(e,t)=>{let n={};if(null!=e[tK]&&(n[tK]=e[tK]),null!=e[tO]&&(n[tO]=e[tO]),null!=e[tC]){let s=eX(e[tC],t);e[tC]?.length===0&&(n.PolicyArns=[]),Object.entries(s).forEach(([e,t])=>{n[`PolicyArns.${e}`]=t})}if(null!=e[tx]&&(n[tx]=e[tx]),null!=e[tI]&&(n[tI]=e[tI]),null!=e[tF]){let s=e5(e[tF],t);e[tF]?.length===0&&(n.Tags=[]),Object.entries(s).forEach(([e,t])=>{n[`Tags.${e}`]=t})}if(null!=e[t_]){let s=e2(e[t_],t);e[t_]?.length===0&&(n.TransitiveTagKeys=[]),Object.entries(s).forEach(([e,t])=>{n[`TransitiveTagKeys.${e}`]=t})}if(null!=e[tA]&&(n[tA]=e[tA]),null!=e[tM]&&(n[tM]=e[tM]),null!=e[tq]&&(n[tq]=e[tq]),null!=e[tz]&&(n[tz]=e[tz]),null!=e[tk]){let s=e4(e[tk],t);e[tk]?.length===0&&(n.ProvidedContexts=[]),Object.entries(s).forEach(([e,t])=>{n[`ProvidedContexts.${e}`]=t})}return n},eQ=(e,t)=>{let n={};if(null!=e[tK]&&(n[tK]=e[tK]),null!=e[tO]&&(n[tO]=e[tO]),null!=e[tN]&&(n[tN]=e[tN]),null!=e[tT]&&(n[tT]=e[tT]),null!=e[tC]){let s=eX(e[tC],t);e[tC]?.length===0&&(n.PolicyArns=[]),Object.entries(s).forEach(([e,t])=>{n[`PolicyArns.${e}`]=t})}return null!=e[tx]&&(n[tx]=e[tx]),null!=e[tI]&&(n[tI]=e[tI]),n},eX=(e,t)=>{let n={},s=1;for(let r of e)null!==r&&(Object.entries(e0(r,t)).forEach(([e,t])=>{n[`member.${s}.${e}`]=t}),s++);return n},e0=(e,t)=>{let n={};return null!=e[tV]&&(n[tV]=e[tV]),n},e1=(e,t)=>{let n={};return null!=e[tR]&&(n[tR]=e[tR]),null!=e[tw]&&(n[tw]=e[tw]),n},e4=(e,t)=>{let n={},s=1;for(let r of e)null!==r&&(Object.entries(e1(r,t)).forEach(([e,t])=>{n[`member.${s}.${e}`]=t}),s++);return n},e6=(e,t)=>{let n={};return null!=e[tv]&&(n[tv]=e[tv]),null!=e[tL]&&(n[tL]=e[tL]),n},e2=(e,t)=>{let n={},s=1;for(let t of e)null!==t&&(n[`member.${s}`]=t,s++);return n},e5=(e,t)=>{let n={},s=1;for(let r of e)null!==r&&(Object.entries(e6(r,t)).forEach(([e,t])=>{n[`member.${s}.${e}`]=t}),s++);return n},e8=(e,t)=>{let n={};return null!=e[tf]&&(n[tf]=(0,p.lK)(e[tf])),null!=e[tS]&&(n[tS]=(0,p.lK)(e[tS])),n},e3=(e,t)=>{let n={};return null!=e[tP]&&(n[tP]=e9(e[tP],t)),null!=e[tg]&&(n[tg]=e8(e[tg],t)),null!=e[tD]&&(n[tD]=(0,p.xW)(e[tD])),null!=e[tz]&&(n[tz]=(0,p.lK)(e[tz])),n},e7=(e,t)=>{let n={};return null!=e[tP]&&(n[tP]=e9(e[tP],t)),null!=e[tj]&&(n[tj]=(0,p.lK)(e[tj])),null!=e[tg]&&(n[tg]=e8(e[tg],t)),null!=e[tD]&&(n[tD]=(0,p.xW)(e[tD])),null!=e[t$]&&(n[t$]=(0,p.lK)(e[t$])),null!=e[tE]&&(n[tE]=(0,p.lK)(e[tE])),null!=e[tz]&&(n[tz]=(0,p.lK)(e[tz])),n},e9=(e,t)=>{let n={};return null!=e[th]&&(n[th]=(0,p.lK)(e[th])),null!=e[tW]&&(n[tW]=(0,p.lK)(e[tW])),null!=e[tU]&&(n[tU]=(0,p.lK)(e[tU])),null!=e[tb]&&(n[tb]=(0,p.Y0)((0,p.t_)(e[tb]))),n},te=(e,t)=>{let n={};return null!=e[tG]&&(n[tG]=(0,p.lK)(e[tG])),n},tt=(e,t)=>{let n={};return null!=e[tG]&&(n[tG]=(0,p.lK)(e[tG])),n},tn=(e,t)=>{let n={};return null!=e[tG]&&(n[tG]=(0,p.lK)(e[tG])),n},ts=(e,t)=>{let n={};return null!=e[tG]&&(n[tG]=(0,p.lK)(e[tG])),n},tr=(e,t)=>{let n={};return null!=e[tG]&&(n[tG]=(0,p.lK)(e[tG])),n},to=(e,t)=>{let n={};return null!=e[tG]&&(n[tG]=(0,p.lK)(e[tG])),n},ti=(e,t)=>{let n={};return null!=e[tG]&&(n[tG]=(0,p.lK)(e[tG])),n},ta=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),tl=(0,p.jr)(ex),td=async(e,t,n,s,r)=>{let{hostname:o,protocol:i="https",port:a,path:l}=await e.endpoint(),d={protocol:i,hostname:o,port:a,method:"POST",path:l.endsWith("/")?l.slice(0,-1)+n:l+n,headers:t};return void 0!==s&&(d.hostname=s),void 0!==r&&(d.body=r),new eE.Kd(d)},tc={"content-type":"application/x-www-form-urlencoded"},tu="2011-06-15",tp="Action",th="AccessKeyId",tm="AssumeRole",tf="AssumedRoleId",tg="AssumedRoleUser",ty="AssumeRoleWithWebIdentity",tS="Arn",tE="Audience",tP="Credentials",tw="ContextAssertion",tI="DurationSeconds",tb="Expiration",tA="ExternalId",tv="Key",tx="Policy",tC="PolicyArns",tR="ProviderArn",tk="ProvidedContexts",tT="ProviderId",tD="PackedPolicySize",t$="Provider",tK="RoleArn",tO="RoleSessionName",tW="SecretAccessKey",tj="SubjectFromWebIdentityToken",tz="SourceIdentity",tM="SerialNumber",tU="SessionToken",tF="Tags",tq="TokenCode",t_="TransitiveTagKeys",tH="Version",tL="Value",tN="WebIdentityToken",tV="arn",tG="message",tB=e=>Object.entries(e).map(([e,t])=>(0,p.$6)(e)+"="+(0,p.$6)(t)).join("&"),tZ=(e,t)=>t.Error?.Code!==void 0?t.Error.Code:404==e.statusCode?"NotFound":void 0;class tJ extends p.uB.classBuilder().ep(P).m(function(e,t,n,s){return[(0,ev.TM)(n,this.serialize,this.deserialize),(0,c.rD)(n,e.getEndpointParameterInstructions())]}).s("AWSSecurityTokenServiceV20110615","AssumeRole",{}).n("STSClient","AssumeRoleCommand").f(void 0,eR).ser(eU).de(eq).build(){}class tY extends p.uB.classBuilder().ep(P).m(function(e,t,n,s){return[(0,ev.TM)(n,this.serialize,this.deserialize),(0,c.rD)(n,e.getEndpointParameterInstructions())]}).s("AWSSecurityTokenServiceV20110615","AssumeRoleWithWebIdentity",{}).n("STSClient","AssumeRoleWithWebIdentityCommand").f(eW,ej).ser(eF).de(e_).build(){}class tQ extends eA{}(0,p.J1)({AssumeRoleCommand:tJ,AssumeRoleWithWebIdentityCommand:tY},tQ);var tX=n(6884);let t0="us-east-1",t1=e=>{if("string"==typeof e?.Arn){let t=e.Arn.split(":");if(t.length>4&&""!==t[4])return t[4]}},t4=async(e,t,n)=>{let s="function"==typeof e?await e():e,r="function"==typeof t?await t():t;return n?.debug?.("@aws-sdk/client-sts::resolveRegion","accepting first of:",`${s} (provider)`,`${r} (parent client)`,`${t0} (STS default)`),s??r??t0},t6=(e,t)=>{let n,s;return async(r,o)=>{if(s=r,!n){let{logger:r=e?.parentClientConfig?.logger,region:o,requestHandler:i=e?.parentClientConfig?.requestHandler,credentialProviderLogger:a}=e,l=await t4(o,e?.parentClientConfig?.region,a),d=!t5(i);n=new t({profile:e?.parentClientConfig?.profile,credentialDefaultProvider:()=>async()=>s,region:l,requestHandler:d?i:void 0,logger:r})}let{Credentials:i,AssumedRoleUser:a}=await n.send(new tJ(o));if(!i||!i.AccessKeyId||!i.SecretAccessKey)throw Error(`Invalid response from STS.assumeRole call with role ${o.RoleArn}`);let l=t1(a),d={accessKeyId:i.AccessKeyId,secretAccessKey:i.SecretAccessKey,sessionToken:i.SessionToken,expiration:i.Expiration,...i.CredentialScope&&{credentialScope:i.CredentialScope},...l&&{accountId:l}};return(0,tX.g)(d,"CREDENTIALS_STS_ASSUME_ROLE","i"),d}},t2=(e,t)=>{let n;return async s=>{if(!n){let{logger:s=e?.parentClientConfig?.logger,region:r,requestHandler:o=e?.parentClientConfig?.requestHandler,credentialProviderLogger:i}=e,a=await t4(r,e?.parentClientConfig?.region,i),l=!t5(o);n=new t({profile:e?.parentClientConfig?.profile,region:a,requestHandler:l?o:void 0,logger:s})}let{Credentials:r,AssumedRoleUser:o}=await n.send(new tY(s));if(!r||!r.AccessKeyId||!r.SecretAccessKey)throw Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${s.RoleArn}`);let i=t1(o),a={accessKeyId:r.AccessKeyId,secretAccessKey:r.SecretAccessKey,sessionToken:r.SessionToken,expiration:r.Expiration,...r.CredentialScope&&{credentialScope:r.CredentialScope},...i&&{accountId:i}};return i&&(0,tX.g)(a,"RESOLVED_ACCOUNT_ID","T"),(0,tX.g)(a,"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID","k"),a}},t5=e=>e?.metadata?.handlerProtocol==="h2",t8=(e,t)=>t?class extends e{constructor(e){for(let n of(super(e),t))this.middlewareStack.use(n)}}:e,t3=(e={},t)=>t6(e,t8(eA,t)),t7=(e={},t)=>t2(e,t8(eA,t))},3279:e=>{e.exports={rE:"3.734.0"}}};